{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/Form.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","Form","state","name","number","onInputChange","currentTarget","value","setState","onFormSubmit","e","preventDefault","props","onSubmit","id","uuidv4","reset","this","className","s","form","form__label","form__input","onChange","type","pattern","title","required","form__button","Component","Filter","filterValue","filter","filter__title","filter__input","Contacts","contacts","filteredContacts","removeHandler","length","contacts__nothingText","contacts__list","map","contact","contacts__item","contacts__text","contacts__btn","onClick","App","find","el","alert","removeContact","onFilterChangeHandle","getFilteredContacts","normalizedFilter","toLowerCase","includes","localcontacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","app","app__title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16d9bfb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__nkQh1\",\"contacts__list\":\"Contacts_contacts__list__2q2zQ\",\"contacts__nothingText\":\"Contacts_contacts__nothingText__2b9eu\",\"contacts__item\":\"Contacts_contacts__item__37-Ck\",\"contacts__text\":\"Contacts_contacts__text__2u_Oh\",\"contacts__btn\":\"Contacts_contacts__btn__O3ueY\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport s from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  onInputChange = ({ currentTarget }) => {\n    const name = currentTarget.name;\n    const value = currentTarget.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n\n    const name = e.currentTarget.name.value;\n    const number = e.currentTarget.number.value;\n\n    this.props.onSubmit({ name, number, id: uuidv4() });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.onFormSubmit}>\n        <label className={s.form__label}>\n          Name\n          <input\n            className={s.form__input}\n            onChange={this.onInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n          />\n          <label className={s.form__label}>\n            Number\n            <input\n              className={s.form__input}\n              onChange={this.onInputChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n            />\n          </label>\n        </label>\n        <button className={s.form__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ onInputChange, filterValue }) {\n  return (\n    <div className={s.filter}>\n      <p className={s.filter__title}>Find contacts by name</p>\n      <input\n        className={s.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onInputChange}\n        value={filterValue}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onInputChange: PropTypes.func,\n  filterValue: PropTypes.string,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contacts({ contacts, filteredContacts, removeHandler }) {\n  return (\n    <div className={s.contacts}>\n      {contacts.length === 0 ? (\n        <p className={s.contacts__nothingText}>No contacts added</p>\n      ) : (\n        <ul className={s.contacts__list}>\n          {filteredContacts.length === 0 ? (\n            <p className={s.contacts__nothingText}>Nothing found</p>\n          ) : (\n            filteredContacts.map(contact => (\n              <li className={s.contacts__item} key={contact.id}>\n                <p className={s.contacts__text}>\n                  {contact.name}: {contact.number}\n                </p>\n                <button\n                  className={s.contacts__btn}\n                  type=\"button\"\n                  onClick={() => removeHandler(contact.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  filteredContacts: PropTypes.arrayOf(PropTypes.object),\n  removeHandler: PropTypes.func,\n};\n\nexport default Contacts;","import { Component } from 'react';\n\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nimport s from './App.module.css';\n// import { stringify } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: ''\n  };\n\n  componentDidMount() {\n    const localcontacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localcontacts) {\n      this.setState({ contacts: localcontacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onSubmit = contact => {\n    const isInContacts = this.state.contacts.find(\n      el => el.name === contact.name,\n    );\n\n    if (isInContacts) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, contact],\n      };\n    });\n  };\n\n  removeContact = id => {\n    const contacts = this.state.contacts.filter(contact => contact.id !== id);\n\n    this.setState({ contacts });\n  };\n\n  onFilterChangeHandle = ({ currentTarget }) => {\n    const value = currentTarget.value;\n\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <div className={s.app}>\n        <h1 className={s.app__title}>Phonebook</h1>\n        <Form onSubmit={this.onSubmit} />\n        <h2 className={s.app__title}>Contacts</h2>\n        <Filter\n          filterValue={this.state.filter}\n          onInputChange={this.onFilterChangeHandle}\n        />\n        <Contacts\n          contacts={this.state.contacts}\n          filteredContacts={filteredContacts}\n          removeHandler={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"form__label\":\"Form_form__label__20WuX\",\"form__input\":\"Form_form__input__1UFqi\",\"form__button\":\"Form_form__button__3OqwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"filter__title\":\"Filter_filter__title__3xM9A\",\"filter__input\":\"Filter_filter__input__b9DYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"app__title\":\"App_app__title__3XaJK\"};"],"sourceRoot":""}